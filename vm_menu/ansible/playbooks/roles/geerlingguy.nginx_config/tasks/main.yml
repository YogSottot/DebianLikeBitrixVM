---
# Variable setup.
- name: Include OS-specific variables.
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"

- name: Define nginx_user.
  ansible.builtin.set_fact:
    nginx_user: "{{ __nginx_user }}"
  when: nginx_user is not defined

- name: Get Nginx version
  ansible.builtin.command: nginx -v
  register: nginx_version_output
  changed_when: false

- name: Extract Nginx version number
  ansible.builtin.set_fact:
    nginx_version: "{{ nginx_version_output.stderr | regex_search('\\d+\\.\\d+\\.\\d+') }}"

# Nginx setup.
- name: Copy nginx configuration in place. # noqa name[casing]
  ansible.builtin.template:
    src: "{{ nginx_conf_template }}"
    dest: "{{ nginx_conf_file_path }}"
    owner: root
    group: "{{ root_group }}"
    mode: "0644"
  notify:
    - reload nginx

- name: Copy nginx static configuration in place. # noqa name[casing]
  ansible.builtin.copy:
    src: "nginx/bx"
    dest: "{{ nginx_conf_main_directory }}"
    owner: root
    group: "{{ root_group }}"
    mode: "0644"
  notify:
    - reload nginx

- name: Copy nginx error pages in place. # noqa name[casing]
  ansible.builtin.copy:
    src: "bitrixenv_error"
    dest: "/var/www/"
    owner: root
    group: "{{ root_group }}"
    mode: "0644"
  notify:
    - reload nginx

# Vhost configuration.
- name: Include vhosts yaml[comments] noqa yaml[comments]
  ansible.builtin.import_tasks: vhosts.yml

- name: Generate self-signet certs for nginx
  ansible.builtin.import_tasks: ssl-selfsigned.yml

- name: Ensure nginx service is running as configured.
  ansible.builtin.service:
    name: nginx
    state: "{{ nginx_service_state }}"
    enabled: "{{ nginx_service_enabled }}"
