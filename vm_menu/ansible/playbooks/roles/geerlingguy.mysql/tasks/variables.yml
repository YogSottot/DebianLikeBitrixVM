---
# Variable configuration.
- name: Include OS-specific variables.
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "vars/{{ ansible_distribution }}.yml"
        - "vars/{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
        - "vars/{{ ansible_os_family }}.yml"
      skip: true
  when: mysql_flavor == 'mariadb' and mysql_mariadb_version != '5.5'

- name: Load CSV data
  ansible.builtin.set_fact:
    csv_data: "{{ lookup('file', 'perf.csv').split('\n') | map('split', ';') | list }}"

- name: Set MySQL configuration
  vars:
    server_memory: "{{ ansible_memtotal_mb }}"
    server_type: "{{ 'openvz' if ansible_virtualization_type == 'openvz' else 'general' }}"
    matching_row: "{{ csv_data | selectattr('1', 'equalto', server_memory | string) | selectattr('2', 'equalto', server_type) | list }}"
  ansible.builtin.set_fact:
    mysql_config: "{{ dict(csv_data[0] | zip(matching_row[0])) if matching_row else {} }}"
  failed_when: not matching_row
  ignore_errors: true # noqa ignore-errors

- name: Use default configuration if no match found
  ansible.builtin.set_fact:
    mysql_config: "{{ dict(csv_data[0] | zip(csv_data[1])) }}"
  when: mysql_config | default({}) | length == 0

- name: Include Percona-specific variables.
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/percona-{{ mysql_percona_version }}-{{ ansible_distribution_major_version }}.yml"
        - "vars/percona-{{ mysql_percona_version }}-{{ ansible_os_family }}.yml"
        - "vars/percona-{{ ansible_distribution_major_version }}.yml"
        - "vars/percona-{{ ansible_os_family }}.yml"
      skip: true
  when: mysql_flavor == 'percona'

- name: Include Mariadb 5.5-specific variables.
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/mariadb-{{ mysql_mariadb_version }}-{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
        - "vars/mariadb-{{ mysql_mariadb_version }}-{{ ansible_os_family }}.yml"
        - "vars/mariadb-{{ mysql_mariadb_version }}.yml"
      skip: true
  when: mysql_flavor == 'mariadb' and mysql_mariadb_version == '5.5'

- name: Define mysql_packages.
  ansible.builtin.set_fact:
    mysql_packages: "{{ __mysql_packages | list }}"
  when: mysql_packages is not defined

- name: Define mysql_daemon.
  ansible.builtin.set_fact:
    mysql_daemon: "{{ __mysql_daemon }}"
  when: mysql_daemon is not defined

- name: Define mysql_slow_query_log_file.
  ansible.builtin.set_fact:
    mysql_slow_query_log_file: "{{ __mysql_slow_query_log_file }}"
  when: mysql_slow_query_log_file is not defined

- name: Define mysql_log_error.
  ansible.builtin.set_fact:
    mysql_log_error: "{{ __mysql_log_error }}"
  when: mysql_log_error is not defined

- name: Define mysql_syslog_tag.
  ansible.builtin.set_fact:
    mysql_syslog_tag: "{{ __mysql_syslog_tag }}"
  when: mysql_syslog_tag is not defined

- name: Define mysql_pid_file.
  ansible.builtin.set_fact:
    mysql_pid_file: "{{ __mysql_pid_file }}"
  when: mysql_pid_file is not defined

- name: Define mysql_config_file.
  ansible.builtin.set_fact:
    mysql_config_file: "{{ __mysql_config_file }}"
  when: mysql_config_file is not defined

- name: Define mysql_log_dir.
  ansible.builtin.set_fact:
    mysql_log_dir: "{{ __mysql_log_dir }}"
  when: mysql_log_dir is not defined

- name: Define mysql_config_include_dir.
  ansible.builtin.set_fact:
    mysql_config_include_dir: "{{ __mysql_config_include_dir }}"
  when: mysql_config_include_dir is not defined

- name: Define mysql_socket.
  ansible.builtin.set_fact:
    mysql_socket: "{{ __mysql_socket }}"
  when: mysql_socket is not defined

- name: Define mysql_supports_innodb_large_prefix.
  ansible.builtin.set_fact:
    mysql_supports_innodb_large_prefix: "{{ __mysql_supports_innodb_large_prefix }}"
  when: mysql_supports_innodb_large_prefix is not defined

- name: Define mysql_percona_repo_baseurl.
  ansible.builtin.set_fact:
    mysql_percona_repo_baseurl: "{{ __mysql_percona_repo_baseurl }}"
  when: mysql_percona_repo_baseurl is not defined and mysql_flavor == 'percona'

- name: Define mysql_percona_repo_release.
  ansible.builtin.set_fact:
    mysql_percona_repo_release: "{{ __mysql_percona_repo_release }}"
  when: mysql_percona_repo_release is not defined and mysql_flavor == 'percona'

- name: Define mysql_percona_version.
  ansible.builtin.set_fact:
    mysql_percona_version: "{{ __mysql_percona_version }}"
  when: mysql_percona_version is not defined and mysql_flavor == 'percona'

- name: Define mysql_percona_packages.
  ansible.builtin.set_fact:
    mysql_percona_packages: "{{ __mysql_percona_packages_57 }}"
  when: mysql_percona_version == '5.7' and mysql_flavor == 'percona'

- name: Define mysql_percona_packages.
  ansible.builtin.set_fact:
    mysql_percona_packages: "{{ __mysql_percona_packages_80 }}"
  when: mysql_percona_version == '8.0' and mysql_flavor == 'percona'

- name: Define mysql_mariadb_full_version.
  ansible.builtin.set_fact:
    mysql_mariadb_full_version: "{{ __mysql_mariadb_full_version }}"
  when: mysql_mariadb_full_version is not defined and mysql_mariadb_version == '5.5' and mysql_flavor =='mariadb'

- name: Define mysql_mariadb_checksum.
  ansible.builtin.set_fact:
    mysql_mariadb_checksum: "{{ __mysql_mariadb_checksum }}"
  when: mysql_mariadb_checksum is not defined and mysql_mariadb_version == '5.5' and mysql_flavor =='mariadb'

- name: Define mysql_mariadb_path.
  ansible.builtin.set_fact:
    mysql_mariadb_path: "{{ __mysql_mariadb_path }}"
  when: mysql_mariadb_path is not defined and mysql_mariadb_version == '5.5' and mysql_flavor =='mariadb'

- name: Define mysql_mariadb_dir
  ansible.builtin.set_fact:
    mysql_mariadb_dir: "{{ __mysql_mariadb_dir }}"
  when: mysql_mariadb_dir is not defined and mysql_mariadb_version == '5.5' and mysql_flavor =='mariadb'
