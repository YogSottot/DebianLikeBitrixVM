---
- name: Check if composite config exists
  ansible.builtin.stat:
    path: "{{ path_sites }}/{{ domain }}/bitrix/html_pages/.config.php"
  register: composite_config

- name: Copy php file to tmp directory
  ansible.builtin.copy:
    src: files/composite.php
    dest: "/tmp/composite.php"
    owner: "{{ user_server_sites }}"
    group: "{{ user_server_sites }}"
    mode: '0750'
  when: composite_config.stat.exists

- name: Get composite configuration
  ansible.builtin.command: /tmp/composite.php -f "{{ path_sites }}/{{ domain }}/bitrix/html_pages/.config.php"
  register: composite_json
  changed_when: false
  when: composite_config.stat.exists

- name: Delete temporary file
  ansible.builtin.file:
    path: "/tmp/composite.php"
    state: absent
  when: composite_config.stat.exists

- name: Parse composite configuration
  ansible.builtin.set_fact:
    composite_config_json: "{{ composite_json.stdout | from_json }}"
  when: composite_config.stat.exists

- name: Prepare composite variables
  ansible.builtin.set_fact:
    bx_sites_info:
      - CompositeNginxID: "{{ domain | regex_replace('[^a-zA-Z0-9]', '_') }}"
        CompositeStatus: "{{ composite_config_json.COMPOSITE == 'Y' | ternary('enable', 'disable') }}"
        CompositeStorage: "{{ composite_config_json.STORAGE | default('files') }}"
        CompositeDomains: "{{ composite_config_json.DOMAINS | dict2items | map(attribute='value') | list }}"
        CompositeIncludeUri: "{{ composite_config_json['~INCLUDE_MASK'] | default([]) }}"
        CompositeExcludeUri: "{{ composite_config_json['~EXCLUDE_MASK'] | default([]) }}"
        CompositeExcludeParams: "{{ composite_config_json['~EXCLUDE_PARAMS'] | default([]) }}"
  when: composite_config.stat.exists

- name: Delete site map config
  ansible.builtin.file:
    dest: "{{ path_nginx }}/maps/{{ item.CompositeNginxID }}.cache_{{ domain }}.conf"
    state: absent
  tags: configure_site
  with_items: "{{ bx_sites_info }}"
  when: composite_config.stat.exists
  notify: "Reload {{ service_nginx_name }}"
