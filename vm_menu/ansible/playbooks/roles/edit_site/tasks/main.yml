---
# tasks file for create_site
- name: Check if bitrix is a symlink
  ansible.builtin.stat:
    path: "{{ path_site_from_links }}/bitrix"
  register: bitrix_stat

- name: Set mode based on bitrix path type
  ansible.builtin.set_fact:
    mode: "{{ 'link' if bitrix_stat.stat.islnk else 'full' }}"

- name: Extract database name from .settings.php
  ansible.builtin.shell: |
    php -r '
    $settings = include "{{ path_site_from_links }}/bitrix/.settings.php";
    echo $settings["connections"]["value"]["default"]["database"];
    '
  register: db_name_result
  changed_when: false

- name: Set db_name variable
  ansible.builtin.set_fact:
    db_name: "{{ db_name_result.stdout }}"

- name: Create cron tasks for agents
  ansible.builtin.include_tasks: "tasks/add_cron_agents.yaml"
  vars:
    path_file_run_cron: "{{ path_sites }}/{{ domain }}{{ bx_cron_agents_path_file_after_document_root }}"
    user_site: "{{ user_server_sites }}"
    group_user_site: "{{ group_user_server_sites }}"
    logs_path_dir: "{{ bx_cron_logs_path_dir }}"
    logs_path_file: "{{ bx_cron_logs_path_file }}"
  when: mode == "full"

############## NGINX ##############
- name: Get Nginx version
  ansible.builtin.command: nginx -v
  register: nginx_version_output
  changed_when: false

- name: Extract Nginx version number
  ansible.builtin.set_fact:
    nginx_version: "{{ nginx_version_output.stderr | regex_search('\\d+\\.\\d+\\.\\d+') }}"

- name: Composite settings
  ansible.builtin.include_tasks: "setup_composite.yml"
  when: nginx_composite | bool

- name: Composite settings
  ansible.builtin.include_tasks: "delete_composite.yml"
  when: not nginx_composite | bool

- name: Adding Nginx configuration file
  ansible.builtin.template:
    dest: "{{ path_nginx_sites_conf }}/{{ domain }}.conf"
    src: "nginx_conf/site.j2"
    owner: root
    group: root
    mode: '644'
  when: not nginx_composite | bool
  notify: "Reload {{ service_nginx_name }}"

- name: Creating symbol link (site_enable) for Nginx configuration file
  ansible.builtin.file:
    src: "{{ path_nginx_sites_conf }}/{{ domain }}.conf"
    dest: "{{ path_nginx_sites_enabled }}/{{ domain }}.conf"
    state: link
  notify: "Reload {{ service_nginx_name }}"

- name: Reloading Nginx
  ansible.builtin.systemd:
    name: "{{ service_nginx_name }}"
    state: reloaded
    enabled: true

############## APACHE ##############
- name: Adding Apache configuration file
  ansible.builtin.template:
    dest: "{{ path_apache_sites_conf }}/{{ domain }}.conf"
    src: "apache_conf/site.j2"
    owner: root
    group: root
    mode: '644'

- name: Creating symbol link (site_enable) for Apache configuration file
  ansible.builtin.file:
    src: "{{ path_apache_sites_conf }}/{{ domain }}.conf"
    dest: "{{ path_apache_sites_enabled }}/{{ domain }}.conf"
    state: link

- name: Reloading Apache
  ansible.builtin.systemd:
    name: "{{ service_apache_name }}"
    state: reloaded
    enabled: true
  when: htaccess_support | bool
