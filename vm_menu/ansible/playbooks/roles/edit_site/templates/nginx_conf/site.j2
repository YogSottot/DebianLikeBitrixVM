# {{ ansible_managed }}
{% if nginx_composite | bool %}
{# defined personal composite setting for site: #}
{# site id (!!! variables must be personal and not affect other sites in the group) #}
{% set ID = item['CompositeNginxID'] %}
{# defined domains in config file: #}
{% set cDomains = item['CompositeDomains'] %}
{% set cDomainsCounter = cDomains|length %}
{# defined include uri for site: #}
{% set cIncludeUri = item['CompositeIncludeUri'] %}
{% set cIncludeUriCounter = cIncludeUri|length %}
{# defined exclude uri for site: #}
{% set cExcludeUri = item['CompositeExcludeUri'] %}
{% set cExcludeUriCounter = cExcludeUri|length %}
{# exclude params in requests #}
{% set cExcludeParams = item['CompositeExcludeParams'] %}
{% set cExcludeParamsCounter = cExcludeParams|length %}
{# set map variable names #}
{% set vDomain = 'config_domain_'+ID %}
{% set vIncUri = 'is_include_uri_'+ID %}
{% set vExlUri = 'not_exclude_uri_'+ID %}
{% set vExlPrm = 'not_exclude_params_'+ID %}
{% set vFinalTest = '' %}
{% set vSite = 'is_site_composite_'+ID %}
###############################################################
# configuration for http-site:
# site_name:                 {{ domain }}
# site_root:                 {{ path_sites }}/{{ domain }}
# site_composite:            {{ nginx_composite }}
# site_composite_id:         {{ ID }}
# site_composite_var:        {{ vSite }}
# site_composite_storage:    {{ nginx_composite_storage }}
###############################################################
{% endif %}
# Default website
server {

    listen 80;
    listen [::]:80;

    server_name {{ domain }} www.{{ domain }};
    server_name_in_redirect off;

    # logs
    access_log /var/log/nginx/{{ domain }}_access.log main;
    error_log /var/log/nginx/{{ domain }}_error.log warn;

    # custom conf
    include custom_conf.d/section_listen_http/*.conf;
    include custom_conf.d/section_listen_http_and_https/*.conf;

{% if htaccess_support | bool %}
    proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header    X-Real-IP          $remote_addr;
    proxy_set_header    Host               $host:80;
    proxy_set_header    X-Forwarded-Host   $host;
    proxy_set_header    X-Forwarded-Scheme $scheme;
    proxy_set_header    X-Forwarded-Proto  $scheme;
    proxy_set_header    X-Forwarded-Port   $server_port;
    set $is_global_cache  1;
    
    proxy_ignore_client_abort off;

    set $proxyserver	"http://127.0.0.1:8090";

    proxy_redirect ~^(http://[^:]+):\d+(/.+)$ $1$2;
    proxy_redirect ~^(https://[^:]+):\d+(/.+)$ $1$2;
{% else %}
    fastcgi_ignore_client_abort off;

    {% if php_version == php_current_default_version and user_server_sites in ['www-data'] %}

        {% if php_enable_php_fpm_xdebug | bool %}
    set $php_sock  unix:/run/php/php{{ php_default_version_debian }}-fpm.sock-xdebug;
        {% else %}
    set $php_sock  unix:/run/php/php{{ php_default_version_debian }}-fpm.sock;
        {% endif %}

    {% endif %}

    {% if php_version != php_current_default_version and user_server_sites in ['www-data'] %}

        {% if not php_enable_php_fpm_xdebug | bool %}
    set $php_sock  unix:/run/php/php{{ php_default_version_debian }}-fpm.sock;
        {% else %}
    set $php_sock  unix:/run/php/php{{ php_default_version_debian }}-fpm.sock-xdebug;
        {% endif %}

    {% endif %}
    {% if user_server_sites not in ['www-data'] %}

        {% if not php_enable_php_fpm_xdebug | bool %}
    set $php_sock  unix:{{ php_fpm_listen }};
        {% else %}
    set $php_sock  unix:{{ php_fpm_listen }}-xdebug;
        {% endif %}

    {% endif %}
{% endif %}

    set $docroot "{{ path_sites }}/{{ domain }}";

    index index.php;
    root "{{ path_sites }}/{{ domain }}";

{% if nginx_composite | bool %}
    set $composite_cache "bitrix/html_pages/${host}${composite_key}/index@${args}.html";
    set $composite_file "${docroot}/${composite_cache}";

    # config file
    set $composite_enabled "${docroot}/bitrix/html_pages/.enabled";
    # if test pass through general tests:
    set $use_composite_cache "";
    # global site test, the same for all sites on the server
    if ($is_global_composite  = 1) {set $use_composite_cache "A";}
    # personal site tests, generated by site config
    if (${{ vSite }} = 1) {set $use_composite_cache "${use_composite_cache}B";}

    # custom options for sites; doesn't changes on update
    include bx/site_settings/{{ domain }}/*.conf;

    {% if htaccess_support | bool %}
    # Include parameters common to all websites
    include bx/conf/bitrix_general.conf;
    {% else %}
    # Include parameters common to all websites
    include bx/conf_fpm/bitrix_general.conf;
    {% endif %}

    # main location with processing composite
    location / {

	if (-f $composite_enabled) { set $use_composite_cache "${use_composite_cache}C"; }

	# test cache file exists
	if (-f $composite_file) { set $use_composite_cache "${use_composite_cache}D"; }

	if ($use_composite_cache = "ABCD") { rewrite .* /$composite_cache last; }


    {% if htaccess_support | bool %}
    proxy_pass $proxyserver;
    {% else %}
    error_page 404 = @bitrix;
        log_not_found off;
    {% endif %}
    }
{% endif %}

{% if not nginx_composite | bool %}
    # custom options for sites; doesn't changes on update
    include bx/site_settings/{{ domain }}/*.conf;
    {% if htaccess_support | bool %}
    # Include parameters common to all websites
    include bx/conf/bitrix.conf;
    {% else %}
    # Include parameters common to all websites
    include bx/conf_fpm/bitrix.conf;
    {% endif %}
{% endif %}
}


server {

{% if nginx_version is version('1.25.1', '>=') %}
    listen {{ item.listen | default('443') }} ssl;
    listen [::]:443 ssl;
    http2 on;
{% else %}
    listen {{ item.listen | default('443') }} ssl http2;
    listen [::]:443 ssl http2;
{% endif %}

    server_name {{ domain }} www.{{ domain }};
    server_name_in_redirect off;

    # logs
    access_log /var/log/nginx/{{ domain }}_access.log main;
    error_log /var/log/nginx/{{ domain }}_error.log warn;

    # custom conf
    include custom_conf.d/section_listen_https/*.conf;
    include custom_conf.d/section_listen_http_and_https/*.conf;

{% if htaccess_support | bool %}
    proxy_set_header    Host                $host:443;
    proxy_set_header    HTTPS               YES;
    proxy_set_header    X-Real-IP           $remote_addr;
    proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Host    $host;
    proxy_set_header    X-Forwarded-Scheme  $scheme;
    proxy_set_header    X-Forwarded-Proto   https;
    set                 $is_global_cache    1;

    set $proxyserver	"http://127.0.0.1:8090";

    proxy_redirect ~^(http://[^:]+):\d+(/.+)$ $1$2;
    proxy_redirect ~^(https://[^:]+):\d+(/.+)$ $1$2;
{% else %}
    fastcgi_ignore_client_abort off;

    {% if php_version == php_current_default_version and user_server_sites in ['www-data'] %}

        {% if php_enable_php_fpm_xdebug | bool %}
    set $php_sock  unix:/run/php/php{{ php_default_version_debian }}-fpm.sock-xdebug;
        {% else %}
    set $php_sock  unix:/run/php/php{{ php_default_version_debian }}-fpm.sock;
        {% endif %}

    {% endif %}

    {% if php_version != php_current_default_version and user_server_sites in ['www-data'] %}

        {% if not php_enable_php_fpm_xdebug | bool %}
    set $php_sock  unix:/run/php/php{{ php_default_version_debian }}-fpm.sock;
        {% else %}
    set $php_sock  unix:/run/php/php{{ php_default_version_debian }}-fpm.sock-xdebug;
        {% endif %}

    {% endif %}
    {% if user_server_sites not in ['www-data'] %}

        {% if not php_enable_php_fpm_xdebug | bool %}
    set $php_sock  unix:{{ php_fpm_listen }};
        {% else %}
    set $php_sock  unix:{{ php_fpm_listen }}-xdebug;
        {% endif %}

    {% endif %}
{% endif %}

    set $docroot "{{ path_sites }}/{{ domain }}";

    index index.php;
    root "{{ path_sites }}/{{ domain }}";

{% if nginx_composite | bool %}
    set $composite_cache "bitrix/html_pages/${host}${composite_key}/index@${args}.html";
    set $composite_file "${docroot}/${composite_cache}";

    # config file
    set $composite_enabled "${docroot}/bitrix/html_pages/.enabled";
    # if test pass through general tests:
    set $use_composite_cache "";
    # global site test, the same for all sites on the server
    if ($is_global_composite  = 1) {set $use_composite_cache "A";}
    # personal site tests, generated by site config
    if (${{ vSite }} = 1) {set $use_composite_cache "${use_composite_cache}B";}

    # custom options for sites; doesn't changes on update
    include bx/site_settings/{{ domain }}/*.conf;

    {% if htaccess_support | bool %}
    # Include parameters common to all websites
    include bx/conf/bitrix_general.conf;
    {% else %}
    # Include parameters common to all websites
    include bx/conf_fpm/bitrix_general.conf;
    {% endif %}

    # main location with processing composite
    location / {

	if (-f $composite_enabled) { set $use_composite_cache "${use_composite_cache}C"; }

	# test cache file exists
	if (-f $composite_file) { set $use_composite_cache "${use_composite_cache}D"; }

	if ($use_composite_cache = "ABCD") { rewrite .* /$composite_cache last; }


    {% if htaccess_support | bool %}
    proxy_pass $proxyserver;
    {% else %}
    error_page 404 = @bitrix;
        log_not_found off;
    {% endif %}
    }
{% endif %}

{% if not nginx_composite | bool %}
    # custom options for sites; doesn't changes on update
    include bx/site_settings/{{ domain }}/*.conf;
    {% if htaccess_support | bool %}
    # Include parameters common to all websites
    include bx/conf/bitrix.conf;
    {% else %}
    # Include parameters common to all websites
    include bx/conf_fpm/bitrix.conf;
    {% endif %}
{% endif %}
}
